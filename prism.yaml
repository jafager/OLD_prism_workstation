---

- name: Configure prism Linux workstation
  hosts: localhost
  become: yes
  tasks:


    ### Updates

    - name: Upgrade packages
      ansible.builtin.apt:
        name: '*'
        state: latest
        update_cache: yes


    ### Replicate init_ansible.sh script

    - name: Install ansible prerequisites
      ansible.builtin.apt:
        name: '{{ item }}'
      loop:
        - software-properties-common

    - name: Install ansible repository
      ansible.builtin.apt_repository:
        repo: ppa:ansible/ansible

    - name: Install ansible
      ansible.builtin.apt:
        name: ansible
        update_cache: yes


    ### Configure jafager user

    - name: Allow sudo without password
      ansible.builtin.copy:
        dest: /etc/sudoers.d/jafager
        owner: root
        group: root
        mode: 0644
        content: |
          jafager ALL = (ALL) NOPASSWD: ALL

    - name: Create SSH directory
      ansible.builtin.file:
        path: /home/jafager/.ssh
        mode: 0700
        state: directory
      become: no

    - name: Generate SSH key
      ansible.builtin.command:
        cmd: ssh-keygen -f /home/jafager/.ssh/id_rsa -C 'jafager@prism' -N ''
        creates: /home/jafager/.ssh/id_rsa
      become: no

    - name: Set environment variable EDITOR
      ansible.builtin.lineinfile:
        path: /home/jafager/.bashrc
        regexp: '^\s*export\s+EDITOR\s*=.*$'
        line: 'export EDITOR=vim'
      become: no

    - name: Set environment variable VISUAL
      ansible.builtin.lineinfile:
        path: /home/jafager/.bashrc
        regexp: '^\s*export\s+VISUAL\s*=.*$'
        line: 'export VISUAL="$EDITOR"'
      become: no


    ### Desktop
    
    - name: Install minimal desktop
      ansible.builtin.apt:
        name: ubuntu-desktop-minimal

    - name: Install chromium web browser
      community.general.snap:
        name: chromium

    - name: Install recommended drivers
      ansible.builtin.command:
        cmd: ubuntu-drivers install --recommended
      register: install_recommended_drivers
      changed_when: not install_recommended_drivers.stdout == 'All the available drivers are already installed.'


    ### Terraform

    - name: Install terraform dependencies
      ansible.builtin.apt:
        name: '{{ item }}'
      loop:
        - gnupg
        - software-properties-common
        - curl

    - name: Add terraform repository key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg

    - name: Add terraform repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://apt.releases.hashicorp.com jammy main

    - name: Install terraform
      ansible.builtin.apt:
        name: terraform
        update_cache: yes
